#!/bin/bash

ID="F4:B6:2D:E2:BF:41"

# Check if systemctl is available
if ! command -v systemctl &>/dev/null; then
  notify-send "Bluetooth Control Error" "systemctl not found. This script requires a system with systemd."
  exit 1
fi

# Check if tofi is available
if ! command -v tofi &>/dev/null; then
  notify-send "Bluetooth Control Error" "tofi not found. Please install tofi to use this script."
  exit 1
fi

# Check if zenity is available
if ! command -v zenity &>/dev/null; then
  notify-send "Bluetooth Control Error" "zenity not found. Please install zenity to use this script."
  exit 1
fi

# Check if notify-send is available
if ! command -v notify-send &>/dev/null; then
  echo "notify-send not found. Please install libnotify-bin to use this script."
  exit 1
fi
i=0
# Function to connect to R50 device
connect_R50() {
  local device_id="$1"
  notify-send "Bluetooth Control" "Connecting to R50 ($device_id)..."
  if bluetoothctl connect "$device_id" &>/dev/null; then
    notify-send "Bluetooth Control" "Successfully connected to R50."
  else
    if [ "$i" -eq 0 ]; then
      ((i++))
      bluetoothctl remove "$device_id"
      sleep 1
      bluetoothctl scan
      sleep 2
      connect_R50 "$device_id"
    else
      notify-send "Bluetooth Control Error" "Failed to connect to R50. Ensure the device is available and paired."
      return 1
    fi
  fi
}

# Function to get sudo password using zenity
get_sudo_password() {
  password=$(zenity --password --title="Sudo Password" --text="Enter your sudo password:")
  echo "$password"
}

# Check Bluetooth service status
if systemctl is-active --quiet bluetooth; then
  # Bluetooth is running
  choice=$(echo -e "Yes\nNo" | tofi --prompt-text "Bluetooth is running. Do you want to stop it? ")
  if [ "$choice" = "Yes" ]; then
    password=$(get_sudo_password)
    if [ -n "$password" ]; then
      echo "$password" | sudo -S systemctl stop bluetooth
      if [ $? -eq 0 ]; then
        notify-send "Bluetooth Control" "Bluetooth service stopped."
      else
        notify-send "Bluetooth Control Error" "Failed to stop Bluetooth service. Incorrect password or insufficient permissions."
      fi
    else
      notify-send "Bluetooth Control Error" "No password provided."
    fi
  else
    notify-send "Bluetooth Control" "No action taken."
  fi
else
  # Bluetooth is not running
  choice=$(echo -e "Yes\nNo" | tofi --prompt-text "Bluetooth is not running. Do you want to start it? ")
  if [ "$choice" = "Yes" ]; then
    password=$(get_sudo_password)
    if [ -n "$password" ]; then
      echo "$password" | sudo -S systemctl start bluetooth
      if [ $? -eq 0 ]; then
        notify-send "Bluetooth Control" "Bluetooth service started."
        sleep 2
        connect_R50 "$ID"
      else
        notify-send "Bluetooth Control Error" "Failed to start Bluetooth service. Incorrect password or insufficient permissions."
      fi
    else
      notify-send "Bluetooth Control Error" "No password provided."
    fi
  else
    notify-send "Bluetooth Control" "No action taken."
  fi
fi
